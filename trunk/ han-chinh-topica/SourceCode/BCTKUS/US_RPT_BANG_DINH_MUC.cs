///************************************************
/// Generated by: TuyenNT
/// Date: 12/07/2014 10:49:12
/// Goal: Create User Service Class for RPT_BANG_DINH_MUC
///************************************************
/// <summary>
/// Create User Service Class for RPT_BANG_DINH_MUC
/// </summary>

using System;
using BCTKDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BCTKUS{

public class US_RPT_BANG_DINH_MUC : US_Object
{
	private const string c_TableName = "RPT_BANG_DINH_MUC";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strNOI_DUNG 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "NOI_DUNG", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["NOI_DUNG"] = value;
		}
	}

	public bool IsNOI_DUNGNull() 
	{
		return pm_objDR.IsNull("NOI_DUNG");
	}

	public void SetNOI_DUNGNull() {
		pm_objDR["NOI_DUNG"] = System.Convert.DBNull;
	}

	public decimal dcL8 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "L8", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["L8"] = value;
		}
	}

	public bool IsL8Null()	{
		return pm_objDR.IsNull("L8");
	}

	public void SetL8Null() {
		pm_objDR["L8"] = System.Convert.DBNull;
	}

	public decimal dcNHAN_VIEN 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "NHAN_VIEN", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["NHAN_VIEN"] = value;
		}
	}

	public bool IsNHAN_VIENNull()	{
		return pm_objDR.IsNull("NHAN_VIEN");
	}

	public void SetNHAN_VIENNull() {
		pm_objDR["NHAN_VIEN"] = System.Convert.DBNull;
	}

	public decimal dcHOC_VIEN_DANG_HOC 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "HOC_VIEN_DANG_HOC", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["HOC_VIEN_DANG_HOC"] = value;
		}
	}

	public bool IsHOC_VIEN_DANG_HOCNull()	{
		return pm_objDR.IsNull("HOC_VIEN_DANG_HOC");
	}

	public void SetHOC_VIEN_DANG_HOCNull() {
		pm_objDR["HOC_VIEN_DANG_HOC"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_RPT_BANG_DINH_MUC() 
	{
		pm_objDS = new DS_RPT_BANG_DINH_MUC();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_RPT_BANG_DINH_MUC(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_RPT_BANG_DINH_MUC(decimal i_dbID) 
	{
		pm_objDS = new DS_RPT_BANG_DINH_MUC();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
	}
}
