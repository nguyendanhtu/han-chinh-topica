///************************************************
/// Generated by: HuyTD
/// Date: 03/07/2014 11:04:29
/// Goal: Create User Service Class for DM_PHONG_BAN
///************************************************
/// <summary>
/// Create User Service Class for DM_PHONG_BAN
/// </summary>

using System;
using BCTKDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using BCTKDS.CDBNames;


namespace BCTKUS
{

    public class US_DM_PHONG_BAN : US_Object
    {
        private const string c_TableName = "DM_PHONG_BAN";
        #region "Public Properties"
        public decimal dcID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID"] = value;
            }
        }

        public bool IsIDNull()
        {
            return pm_objDR.IsNull("ID");
        }

        public void SetIDNull()
        {
            pm_objDR["ID"] = System.Convert.DBNull;
        }

        public string strMA_PHONG_BAN
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "MA_PHONG_BAN", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["MA_PHONG_BAN"] = value;
            }
        }

        public bool IsMA_PHONG_BANNull()
        {
            return pm_objDR.IsNull("MA_PHONG_BAN");
        }

        public void SetMA_PHONG_BANNull()
        {
            pm_objDR["MA_PHONG_BAN"] = System.Convert.DBNull;
        }

        public string strTEN_PHONG_BAN
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "TEN_PHONG_BAN", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["TEN_PHONG_BAN"] = value;
            }
        }

        public bool IsTEN_PHONG_BANNull()
        {
            return pm_objDR.IsNull("TEN_PHONG_BAN");
        }

        public void SetTEN_PHONG_BANNull()
        {
            pm_objDR["TEN_PHONG_BAN"] = System.Convert.DBNull;
        }

        #endregion
        #region "Init Functions"
        public US_DM_PHONG_BAN()
        {
            pm_objDS = new DS_DM_PHONG_BAN();
            pm_strTableName = c_TableName;
            pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
        }

        public US_DM_PHONG_BAN(DataRow i_objDR)
            : this()
        {
            this.DataRow2Me(i_objDR);
        }

        public US_DM_PHONG_BAN(decimal i_dbID)
        {
            pm_objDS = new DS_DM_PHONG_BAN();
            pm_strTableName = c_TableName;
            IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
            v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
            SqlCommand v_cmdSQL;
            v_cmdSQL = v_objMkCmd.getSelectCmd();
            this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
            pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
        }
        #endregion

        #region "Addtion"
        public void get_phong_ban_duoc_su_dung_yn(
            decimal ip_id_user_group
            , bool is_user_group_using_data
            , DS_DM_PHONG_BAN op_ds_phong_ban)
        {

            string v_str_sql_condition = " WHERE " + DM_PHONG_BAN.ID;


            if (is_user_group_using_data)
            {
                v_str_sql_condition += " IN (SELECT ID_PHONG_BAN FROM HT_QUAN_HE_SU_DUNG_DU_LIEU WHERE ID_USER_GROUP =" + ip_id_user_group.ToString() + ") ORDER BY TEN_PHONG_BAN";
            }
            else
            {
                v_str_sql_condition += " NOT IN (SELECT ID_PHONG_BAN FROM HT_QUAN_HE_SU_DUNG_DU_LIEU WHERE ID_USER_GROUP =" + ip_id_user_group.ToString() + ") ORDER BY TEN_PHONG_BAN";
            }
            this.FillDataset(op_ds_phong_ban, v_str_sql_condition);
        }
        #endregion

    }
}
