///************************************************
/// Generated by: DungNT
/// Date: 12/07/2014 02:16:40
/// Goal: Create User Service Class for DM_CO_SO_DINH_MUC
///************************************************
/// <summary>
/// Create User Service Class for DM_CO_SO_DINH_MUC
/// </summary>

using System;
using BCTKDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BCTKUS{

public class US_DM_CO_SO_DINH_MUC : US_Object
{
	private const string c_TableName = "DM_CO_SO_DINH_MUC";
    #region "Public Properties"
    public decimal dcID
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID"] = value;
        }
    }

    public bool IsIDNull()
    {
        return pm_objDR.IsNull("ID");
    }

    public void SetIDNull()
    {
        pm_objDR["ID"] = System.Convert.DBNull;
    }

    public string strMA_CO_SO_DINH_MUC
    {
        get
        {
            return CNull.RowNVLString(pm_objDR, "MA_CO_SO_DINH_MUC", IPConstants.c_DefaultString);
        }
        set
        {
            pm_objDR["MA_CO_SO_DINH_MUC"] = value;
        }
    }

    public bool IsMA_CO_SO_DINH_MUCNull()
    {
        return pm_objDR.IsNull("MA_CO_SO_DINH_MUC");
    }

    public void SetMA_CO_SO_DINH_MUCNull()
    {
        pm_objDR["MA_CO_SO_DINH_MUC"] = System.Convert.DBNull;
    }

    public string strTEN_CO_SO_DINH_MUC
    {
        get
        {
            return CNull.RowNVLString(pm_objDR, "TEN_CO_SO_DINH_MUC", IPConstants.c_DefaultString);
        }
        set
        {
            pm_objDR["TEN_CO_SO_DINH_MUC"] = value;
        }
    }

    public bool IsTEN_CO_SO_DINH_MUCNull()
    {
        return pm_objDR.IsNull("TEN_CO_SO_DINH_MUC");
    }

    public void SetTEN_CO_SO_DINH_MUCNull()
    {
        pm_objDR["TEN_CO_SO_DINH_MUC"] = System.Convert.DBNull;
    }

    public decimal dcID_LOAI_DINH_MUC
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID_LOAI_DINH_MUC", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID_LOAI_DINH_MUC"] = value;
        }
    }

    public bool IsID_LOAI_DINH_MUCNull()
    {
        return pm_objDR.IsNull("ID_LOAI_DINH_MUC");
    }

    public void SetID_LOAI_DINH_MUCNull()
    {
        pm_objDR["ID_LOAI_DINH_MUC"] = System.Convert.DBNull;
    }

    public decimal dcDON_GIA_DINH_MUC
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "DON_GIA_DINH_MUC", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["DON_GIA_DINH_MUC"] = value;
        }
    }

    public bool IsDON_GIA_DINH_MUCNull()
    {
        return pm_objDR.IsNull("DON_GIA_DINH_MUC");
    }

    public void SetDON_GIA_DINH_MUCNull()
    {
        pm_objDR["DON_GIA_DINH_MUC"] = System.Convert.DBNull;
    }

    public DateTime datAP_DUNG_TU_NGAY
    {
        get
        {
            return CNull.RowNVLDate(pm_objDR, "AP_DUNG_TU_NGAY", IPConstants.c_DefaultDate);
        }
        set
        {
            pm_objDR["AP_DUNG_TU_NGAY"] = value;
        }
    }

    public bool IsAP_DUNG_TU_NGAYNull()
    {
        return pm_objDR.IsNull("AP_DUNG_TU_NGAY");
    }

    public void SetAP_DUNG_TU_NGAYNull()
    {
        pm_objDR["AP_DUNG_TU_NGAY"] = System.Convert.DBNull;
    }

    #endregion
#region "Init Functions"
	public US_DM_CO_SO_DINH_MUC() 
	{
		pm_objDS = new DS_DM_CO_SO_DINH_MUC();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_DM_CO_SO_DINH_MUC(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_DM_CO_SO_DINH_MUC(decimal i_dbID) 
	{
		pm_objDS = new DS_DM_CO_SO_DINH_MUC();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion

}
}
