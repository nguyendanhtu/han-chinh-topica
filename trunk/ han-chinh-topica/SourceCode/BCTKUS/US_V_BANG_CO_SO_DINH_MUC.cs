///************************************************
/// Generated by: HuyTD
/// Date: 27/06/2014 09:28:17
/// Goal: Create User Service Class for V_BANG_CO_SO_DINH_MUC
///************************************************
/// <summary>
/// Create User Service Class for V_BANG_CO_SO_DINH_MUC
/// </summary>

using System;
using BCTKDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BCTKUS{

public class US_V_BANG_CO_SO_DINH_MUC : US_Object
{
	private const string c_TableName = "V_BANG_CO_SO_DINH_MUC";
#region "Public Properties"
	public string strLOAI_DM 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "LOAI_DM", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["LOAI_DM"] = value;
		}
	}

	public bool IsLOAI_DMNull() 
	{
		return pm_objDR.IsNull("LOAI_DM");
	}

	public void SetLOAI_DMNull() {
		pm_objDR["LOAI_DM"] = System.Convert.DBNull;
	}

	public decimal dcHOC_VIEN_TUYEN_MOI 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "HOC_VIEN_TUYEN_MOI", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["HOC_VIEN_TUYEN_MOI"] = value;
		}
	}

	public bool IsHOC_VIEN_TUYEN_MOINull()	{
		return pm_objDR.IsNull("HOC_VIEN_TUYEN_MOI");
	}

	public void SetHOC_VIEN_TUYEN_MOINull() {
		pm_objDR["HOC_VIEN_TUYEN_MOI"] = System.Convert.DBNull;
	}

	public decimal dcNHAN_VIEN_DON_VI 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "NHAN_VIEN_DON_VI", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["NHAN_VIEN_DON_VI"] = value;
		}
	}

	public bool IsNHAN_VIEN_DON_VINull()	{
		return pm_objDR.IsNull("NHAN_VIEN_DON_VI");
	}

	public void SetNHAN_VIEN_DON_VINull() {
		pm_objDR["NHAN_VIEN_DON_VI"] = System.Convert.DBNull;
	}

	public decimal dcHOC_VIEN_DANG_HOC 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "HOC_VIEN_DANG_HOC", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["HOC_VIEN_DANG_HOC"] = value;
		}
	}

	public bool IsHOC_VIEN_DANG_HOCNull()	{
		return pm_objDR.IsNull("HOC_VIEN_DANG_HOC");
	}

	public void SetHOC_VIEN_DANG_HOCNull() {
		pm_objDR["HOC_VIEN_DANG_HOC"] = System.Convert.DBNull;
	}

	public decimal dcSD_CC 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "SD_CC", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["SD_CC"] = value;
		}
	}

	public bool IsSD_CCNull()	{
		return pm_objDR.IsNull("SD_CC");
	}

	public void SetSD_CCNull() {
		pm_objDR["SD_CC"] = System.Convert.DBNull;
	}

	public decimal dcTD_DON_VI 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "TD_DON_VI", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["TD_DON_VI"] = value;
		}
	}

	public bool IsTD_DON_VINull()	{
		return pm_objDR.IsNull("TD_DON_VI");
	}

	public void SetTD_DON_VINull() {
		pm_objDR["TD_DON_VI"] = System.Convert.DBNull;
	}

	public decimal dcPM_DON_VI 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "PM_DON_VI", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["PM_DON_VI"] = value;
		}
	}

	public bool IsPM_DON_VINull()	{
		return pm_objDR.IsNull("PM_DON_VI");
	}

	public void SetPM_DON_VINull() {
		pm_objDR["PM_DON_VI"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
    public void FillDatasetSearch(DS_V_BANG_CO_SO_DINH_MUC ip_ds,DateTime ip_dat_ngay_ap_dung)
    {
        CStoredProc v_store_proc = new CStoredProc("pr_V_BANG_CO_SO_DINH_MUC_search");
        v_store_proc.addDatetimeInputParam("@DAT_NGAY_AP_DUNG", ip_dat_ngay_ap_dung);
        v_store_proc.fillDataSetByCommand(this, ip_ds);
    }
	public US_V_BANG_CO_SO_DINH_MUC() 
	{
		pm_objDS = new DS_V_BANG_CO_SO_DINH_MUC();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_V_BANG_CO_SO_DINH_MUC(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_V_BANG_CO_SO_DINH_MUC(decimal i_dbID) 
	{
		pm_objDS = new DS_V_BANG_CO_SO_DINH_MUC();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
	}
}
