///************************************************
/// Generated by: LinhDH
/// Date: 30/08/2013 03:08:40
/// Goal: Create User Service Class for GD_PHAN_HOI
///************************************************
/// <summary>
/// Create User Service Class for GD_PHAN_HOI
/// </summary>


using System;
using BCTKDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;


namespace BCTKUS
{

	public class US_GD_PHAN_HOI : US_Object
	{
		private const string c_TableName = "GD_PHAN_HOI";
		#region Public Properties
		public decimal dcID 
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
			}
			set	
			{
				pm_objDR["ID"] = value;
			}
		}

		public bool IsIDNull()	{
			return pm_objDR.IsNull("ID");
		}

		public void SetIDNull() {
			pm_objDR["ID"] = System.Convert.DBNull;
		}

		public string strHO_VA_TEN 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "HO_VA_TEN", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["HO_VA_TEN"] = value;
			}
		}

		public bool IsHO_VA_TENNull() 
		{
			return pm_objDR.IsNull("HO_VA_TEN");
		}

		public void SetHO_VA_TENNull() {
			pm_objDR["HO_VA_TEN"] = System.Convert.DBNull;
		}

		public string strSO_DIEN_THOAI 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "SO_DIEN_THOAI", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["SO_DIEN_THOAI"] = value;
			}
		}

		public bool IsSO_DIEN_THOAINull() 
		{
			return pm_objDR.IsNull("SO_DIEN_THOAI");
		}

		public void SetSO_DIEN_THOAINull() {
			pm_objDR["SO_DIEN_THOAI"] = System.Convert.DBNull;
		}

		public string strEMAIL 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "EMAIL", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["EMAIL"] = value;
			}
		}

		public bool IsEMAILNull() 
		{
			return pm_objDR.IsNull("EMAIL");
		}

		public void SetEMAILNull() {
			pm_objDR["EMAIL"] = System.Convert.DBNull;
		}

		public string strTIEU_DE 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "TIEU_DE", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["TIEU_DE"] = value;
			}
		}

		public bool IsTIEU_DENull() 
		{
			return pm_objDR.IsNull("TIEU_DE");
		}

		public void SetTIEU_DENull() {
			pm_objDR["TIEU_DE"] = System.Convert.DBNull;
		}

		public string strNOI_DUNG_PHAN_HOI 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "NOI_DUNG_PHAN_HOI", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["NOI_DUNG_PHAN_HOI"] = value;
			}
		}

		public bool IsNOI_DUNG_PHAN_HOINull() 
		{
			return pm_objDR.IsNull("NOI_DUNG_PHAN_HOI");
		}

		public void SetNOI_DUNG_PHAN_HOINull() {
			pm_objDR["NOI_DUNG_PHAN_HOI"] = System.Convert.DBNull;
		}

		public DateTime datTHOI_GIAN_PHAN_HOI
		{
			get   
			{
				return CNull.RowNVLDate(pm_objDR, "THOI_GIAN_PHAN_HOI", IPConstants.c_DefaultDate);
			}
			set   
			{
				pm_objDR["THOI_GIAN_PHAN_HOI"] = value;
			}
		}

		public bool IsTHOI_GIAN_PHAN_HOINull()
		{
			return pm_objDR.IsNull("THOI_GIAN_PHAN_HOI");
		}

		public void SetTHOI_GIAN_PHAN_HOINull()
		{
			pm_objDR["THOI_GIAN_PHAN_HOI"] = System.Convert.DBNull;
		}

		public string strGHI_CHU 
		{
			get 
			{
				return CNull.RowNVLString(pm_objDR, "GHI_CHU", IPConstants.c_DefaultString);
			}
			set 
			{
				pm_objDR["GHI_CHU"] = value;
			}
		}

		public bool IsGHI_CHUNull() 
		{
			return pm_objDR.IsNull("GHI_CHU");
		}

		public void SetGHI_CHUNull() {
			pm_objDR["GHI_CHU"] = System.Convert.DBNull;
		}

		#endregion


		#region Init Functions
		public US_GD_PHAN_HOI() 
		{
			pm_objDS = new DS_GD_PHAN_HOI();
			pm_strTableName = c_TableName;
			pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
		}

		public US_GD_PHAN_HOI(DataRow i_objDR): this()
		{
			this.DataRow2Me(i_objDR);
		}

		public US_GD_PHAN_HOI(decimal i_dbID) 
		{
			pm_objDS = new DS_GD_PHAN_HOI();
			pm_strTableName = c_TableName;
			IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
			v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
			SqlCommand v_cmdSQL;
			v_cmdSQL = v_objMkCmd.getSelectCmd();
			this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
			pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
		}
		#endregion


	}
}
