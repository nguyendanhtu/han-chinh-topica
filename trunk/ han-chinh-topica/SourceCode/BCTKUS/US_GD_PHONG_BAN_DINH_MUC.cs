///************************************************
/// Generated by: HuyTD
/// Date: 12/07/2014 06:51:16
/// Goal: Create User Service Class for GD_PHONG_BAN_DINH_MUC
///************************************************
/// <summary>
/// Create User Service Class for GD_PHONG_BAN_DINH_MUC
/// </summary>

using System;
using BCTKDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BCTKUS{

public class US_GD_PHONG_BAN_DINH_MUC : US_Object
{
	private const string c_TableName = "GD_PHONG_BAN_DINH_MUC";
    #region "Public Properties"
    public decimal dcID
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID"] = value;
        }
    }

    public bool IsIDNull()
    {
        return pm_objDR.IsNull("ID");
    }

    public void SetIDNull()
    {
        pm_objDR["ID"] = System.Convert.DBNull;
    }

    public decimal dcID_PHONG_BAN
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID_PHONG_BAN", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID_PHONG_BAN"] = value;
        }
    }

    public bool IsID_PHONG_BANNull()
    {
        return pm_objDR.IsNull("ID_PHONG_BAN");
    }

    public void SetID_PHONG_BANNull()
    {
        pm_objDR["ID_PHONG_BAN"] = System.Convert.DBNull;
    }

    public decimal dcID_CO_SO_DINH_MUC
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID_CO_SO_DINH_MUC", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID_CO_SO_DINH_MUC"] = value;
        }
    }

    public bool IsID_CO_SO_DINH_MUCNull()
    {
        return pm_objDR.IsNull("ID_CO_SO_DINH_MUC");
    }

    public void SetID_CO_SO_DINH_MUCNull()
    {
        pm_objDR["ID_CO_SO_DINH_MUC"] = System.Convert.DBNull;
    }

    public decimal dcID_DM_CO_SO
    {
        get
        {
            return CNull.RowNVLDecimal(pm_objDR, "ID_DM_CO_SO", IPConstants.c_DefaultDecimal);
        }
        set
        {
            pm_objDR["ID_DM_CO_SO"] = value;
        }
    }

    public bool IsID_DM_CO_SONull()
    {
        return pm_objDR.IsNull("ID_DM_CO_SO");
    }

    public void SetID_DM_CO_SONull()
    {
        pm_objDR["ID_DM_CO_SO"] = System.Convert.DBNull;
    }

    #endregion
#region "Init Functions"
	public US_GD_PHONG_BAN_DINH_MUC() 
	{
		pm_objDS = new DS_GD_PHONG_BAN_DINH_MUC();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_GD_PHONG_BAN_DINH_MUC(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_GD_PHONG_BAN_DINH_MUC(decimal i_dbID) 
	{
		pm_objDS = new DS_GD_PHONG_BAN_DINH_MUC();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
	}
}
