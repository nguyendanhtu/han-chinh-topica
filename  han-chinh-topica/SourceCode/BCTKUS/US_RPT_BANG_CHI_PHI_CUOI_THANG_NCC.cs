///************************************************
/// Generated by: HuyTD
/// Date: 12/08/2014 06:05:13
/// Goal: Create User Service Class for RPT_BANG_CHI_PHI_CUOI_THANG_NCC
///************************************************
/// <summary>
/// Create User Service Class for RPT_BANG_CHI_PHI_CUOI_THANG_NCC
/// </summary>

using System;
using BCTKDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BCTKUS{

public class US_RPT_BANG_CHI_PHI_CUOI_THANG_NCC : US_Object
{
	private const string c_TableName = "RPT_BANG_CHI_PHI_CUOI_THANG_NCC";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public DateTime datNGAY
	{
		get   
		{
			return CNull.RowNVLDate(pm_objDR, "NGAY", IPConstants.c_DefaultDate);
		}
		set   
		{
			pm_objDR["NGAY"] = value;
		}
	}

	public bool IsNGAYNull()
	{
		return pm_objDR.IsNull("NGAY");
	}

	public void SetNGAYNull()
	{
		pm_objDR["NGAY"] = System.Convert.DBNull;
	}

	public string strMA_HD 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MA_HD", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MA_HD"] = value;
		}
	}

	public bool IsMA_HDNull() 
	{
		return pm_objDR.IsNull("MA_HD");
	}

	public void SetMA_HDNull() {
		pm_objDR["MA_HD"] = System.Convert.DBNull;
	}

	public string strTEN_VPP 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "TEN_VPP", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["TEN_VPP"] = value;
		}
	}

	public bool IsTEN_VPPNull() 
	{
		return pm_objDR.IsNull("TEN_VPP");
	}

	public void SetTEN_VPPNull() {
		pm_objDR["TEN_VPP"] = System.Convert.DBNull;
	}

	public string strDVT 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "DVT", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["DVT"] = value;
		}
	}

	public bool IsDVTNull() 
	{
		return pm_objDR.IsNull("DVT");
	}

	public void SetDVTNull() {
		pm_objDR["DVT"] = System.Convert.DBNull;
	}

	public decimal dcSO_LUONG 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "SO_LUONG", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["SO_LUONG"] = value;
		}
	}

	public bool IsSO_LUONGNull()	{
		return pm_objDR.IsNull("SO_LUONG");
	}

	public void SetSO_LUONGNull() {
		pm_objDR["SO_LUONG"] = System.Convert.DBNull;
	}

	public decimal dcGIA_BAN 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "GIA_BAN", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["GIA_BAN"] = value;
		}
	}

	public bool IsGIA_BANNull()	{
		return pm_objDR.IsNull("GIA_BAN");
	}

	public void SetGIA_BANNull() {
		pm_objDR["GIA_BAN"] = System.Convert.DBNull;
	}

	public decimal dcDOANH_THU 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "DOANH_THU", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["DOANH_THU"] = value;
		}
	}

	public bool IsDOANH_THUNull()	{
		return pm_objDR.IsNull("DOANH_THU");
	}

	public void SetDOANH_THUNull() {
		pm_objDR["DOANH_THU"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_RPT_BANG_CHI_PHI_CUOI_THANG_NCC() 
	{
		pm_objDS = new DS_RPT_BANG_CHI_PHI_CUOI_THANG_NCC();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_RPT_BANG_CHI_PHI_CUOI_THANG_NCC(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_RPT_BANG_CHI_PHI_CUOI_THANG_NCC(decimal i_dbID) 
	{
		pm_objDS = new DS_RPT_BANG_CHI_PHI_CUOI_THANG_NCC();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
	}
}
